https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/ > create account
https://github.com/Aakashdeveloper/oct_react_mrng_21

//extensions
> vscode-icons
> TabNine
> Git history
> git lens
> eslint

html
css
bootstrap 3,4,5

basicJs (during react)

Npm
React = 3
Mock API
json-server
Github
////////////////////////////////
Depolyment
-> MERN
-> heroku
-> Aws
-> Docker
-> Nginx

React-JWT(Login Logout)-2
React_hooks -1

React-GraphQL-1
HOC
Basic React Native=1
React-Redux =1
React-Redux =1
//////Walkthrough////////
React-Saga -1
React-with-typescript-1
Testing Jest Enzime
--------NOT Backend--------------
API
GraphQL
Login/Logout

///////////////////////////////////
React is a frontend lib/framework that help to build  single page application
using component base structure

SPA> Single Page Application
open source

npm > node package manager

/////////
JSON > JavaScript Object Notation

var data = [
    {
        id:1,
        name:'John',
        city:'Delhi'
    },
    {
        id:1,
        name:'Ankit',
        city:'Amsterdam',
        country:'Netherlands'
    }
]

///////////////////////////////////
Package.json
///////////////////////////////////
> Entry point to application
> contains meta data(name,version,description)
> commands(start,stop,build)
> packages(what all packages we have for our application)



///////////////////////////////////
Step to generate Package.json
///////////////////////////////////
**NodeJs must be installed
> go inside the folder using cmd
> npm init
> Answer all questions
> type "yes"

///////////////////////////////////
Step to install packages
///////////////////////////////////
> go inside the folder using cmd
> npm i package name

///////////////////////////////////
Step to generate react app
///////////////////////////////////

#window (admin access)
(One Time Step)
> open the cmd as administrator
> npm i -g create-react-app
> after install close cmd

(next all time)
> open cmd
> go inside the folder where you want app
> create-react-app appname

-------------------------
#mac/linux (admin access)
(One Time Step)
> open terminal
> sudo npm i -g create-react-app
> after install close terminal

(next all time)
> open terminal
> go inside the folder
> create-react-app appname

-------------------------
#office laptop (no admin access)
> open cmd
> go inside the folder
> npx create-react-app appname


///////////////////////////////////
Step to run react app
///////////////////////////////////
> open cmd/terminals
> go inside the app folder
> npm start
> http://localhost:3000/


////////
react  > its the main package of react
react-dom > this help to render the component in html
react-script > to start the application

npm start
npm run kiran

//////////
block > always start from the new line
inline > start in the same line

/////Css//////////
inline > inside html tag
styletag > head of the page
stylesheet > seperate css file

inline > styletag > stylesheet


h1

inline{
    color:red;
    font-size:20px;
}

styletag{
     color:orange;
     text-align:center
}

sheettag{
     color:teal;
     font-size:30px;
     font-weight:bold;
     text-align:right
}


{
    color:red;
    font-size:20px;
    text-align:center;
    font-weight:bold;
}

/////////target in css//////
tagname > h1 ,p
id > #   (unique)
class > . (common)

bootstrap 3
grid
xs < 768px
sm > 768
md > 992
lg > 1200

bootstrap 4
col- < 576
sm >576
md >768px
lg > 992
xl > 1200

bootstrap 5
xs < 576
sm > 576
md >768px
lg > 992
xl > 1200
xxl >1400

funtion add(a,b){
    var out = [a,b]
    return out
}

add(1,2)
[1,2]

//////////////
functional
> dumb component
> we use for display purposes
> we dont add logic there
> we cannot call Api
> we cannot maintain state

class
> logical component
> we can also use for display 
> we can call Api and maintain state

hooks 

///////////
state
> local variables
> scope of a state is in one component only
> we can update value of state
> mutable

props
> help to transfer data from one component to another
  (component must be nested)
> we cannot update the value of props
> immutable


var a = [1,2,3,4]

for(i=0;i<a.length;i++){
    return a[i]*2
}

a.map((data) => {return data*2})
<input onChange={()=>{this.handleChange('hiiii')}}/>


function add(a,b){
    return a+b
}

add(1,2)

///////
filter
indexOf

https://medium.com/techmagic/reactjs-vs-angular5-vs-vue-js-what-to-choose-in-2018-b91e028fa91d

var a = [0,1,2,3]
a.filter((data) => {return data*2})
[1,2,3]

var a = ["Delhi","Mumbai","Pune","London"]
a.indexOf('Delhi')
0
a.indexOf('London')
3
a.indexOf('Amsterdam')
-1
a.indexOf('Venice')
-1

parent => child  (props)
child => parent (props with function)

// parent
function add(a,b){
    return a+b
}

// child
add(1,2)

npm i react-router-dom

//////
params
> pass after /
> we need to declare
props.match.params.paramname

queryParams
> pass after ?
> no need to declare


history > redirects
location > for query params
match > params

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

//payment gateway url
https://developerpayment.herokuapp.com/paynow

/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps

///////////////////////////////////
Dummy api

#One Time
> open cmd as administrator
> npm i -g json-server

# next Time
> open cmd
> go inside the folder
> json-server --watch booking.json --port 5430



promise > is method which is waiting for the resposen
from above call
waiting to resolve the data

npm uninstall react-router-dom
npm i react-router-dom@5.2.0